// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: raftdb-grpc.proto

package raftdb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Op_Type int32

const (
	Op_GET    Op_Type = 0
	Op_PUT    Op_Type = 1
	Op_DELETE Op_Type = 2
)

// Enum value maps for Op_Type.
var (
	Op_Type_name = map[int32]string{
		0: "GET",
		1: "PUT",
		2: "DELETE",
	}
	Op_Type_value = map[string]int32{
		"GET":    0,
		"PUT":    1,
		"DELETE": 2,
	}
)

func (x Op_Type) Enum() *Op_Type {
	p := new(Op_Type)
	*p = x
	return p
}

func (x Op_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_raftdb_grpc_proto_enumTypes[0].Descriptor()
}

func (Op_Type) Type() protoreflect.EnumType {
	return &file_raftdb_grpc_proto_enumTypes[0]
}

func (x Op_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op_Type.Descriptor instead.
func (Op_Type) EnumDescriptor() ([]byte, []int) {
	return file_raftdb_grpc_proto_rawDescGZIP(), []int{0, 0}
}

type Op struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Cid   string  `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Seq   int64   `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	Err   string  `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"`
	Type  Op_Type `protobuf:"varint,6,opt,name=type,proto3,enum=raftdb.Op_Type" json:"type,omitempty"`
}

func (x *Op) Reset() {
	*x = Op{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftdb_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Op) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Op) ProtoMessage() {}

func (x *Op) ProtoReflect() protoreflect.Message {
	mi := &file_raftdb_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Op.ProtoReflect.Descriptor instead.
func (*Op) Descriptor() ([]byte, []int) {
	return file_raftdb_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *Op) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Op) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Op) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Op) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Op) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *Op) GetType() Op_Type {
	if x != nil {
		return x.Type
	}
	return Op_GET
}

type GetArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Seq int64  `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *GetArgs) Reset() {
	*x = GetArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftdb_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArgs) ProtoMessage() {}

func (x *GetArgs) ProtoReflect() protoreflect.Message {
	mi := &file_raftdb_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArgs.ProtoReflect.Descriptor instead.
func (*GetArgs) Descriptor() ([]byte, []int) {
	return file_raftdb_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetArgs) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetArgs) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type GetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	WrongLeader bool   `protobuf:"varint,2,opt,name=wrong_leader,json=wrongLeader,proto3" json:"wrong_leader,omitempty"`
}

func (x *GetReply) Reset() {
	*x = GetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftdb_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReply) ProtoMessage() {}

func (x *GetReply) ProtoReflect() protoreflect.Message {
	mi := &file_raftdb_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReply.ProtoReflect.Descriptor instead.
func (*GetReply) Descriptor() ([]byte, []int) {
	return file_raftdb_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *GetReply) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetReply) GetWrongLeader() bool {
	if x != nil {
		return x.WrongLeader
	}
	return false
}

type PutArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Seq   int64  `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	Cid   string `protobuf:"bytes,4,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *PutArgs) Reset() {
	*x = PutArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftdb_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutArgs) ProtoMessage() {}

func (x *PutArgs) ProtoReflect() protoreflect.Message {
	mi := &file_raftdb_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutArgs.ProtoReflect.Descriptor instead.
func (*PutArgs) Descriptor() ([]byte, []int) {
	return file_raftdb_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *PutArgs) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PutArgs) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutArgs) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *PutArgs) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type PutReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrongLeader bool `protobuf:"varint,1,opt,name=wrong_leader,json=wrongLeader,proto3" json:"wrong_leader,omitempty"`
}

func (x *PutReply) Reset() {
	*x = PutReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftdb_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutReply) ProtoMessage() {}

func (x *PutReply) ProtoReflect() protoreflect.Message {
	mi := &file_raftdb_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutReply.ProtoReflect.Descriptor instead.
func (*PutReply) Descriptor() ([]byte, []int) {
	return file_raftdb_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *PutReply) GetWrongLeader() bool {
	if x != nil {
		return x.WrongLeader
	}
	return false
}

type DeleteArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Seq int64  `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	Cid string `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *DeleteArgs) Reset() {
	*x = DeleteArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftdb_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArgs) ProtoMessage() {}

func (x *DeleteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_raftdb_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArgs.ProtoReflect.Descriptor instead.
func (*DeleteArgs) Descriptor() ([]byte, []int) {
	return file_raftdb_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteArgs) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DeleteArgs) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *DeleteArgs) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type DeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrongLeader bool `protobuf:"varint,1,opt,name=wrong_leader,json=wrongLeader,proto3" json:"wrong_leader,omitempty"`
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raftdb_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_raftdb_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_raftdb_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteReply) GetWrongLeader() bool {
	if x != nil {
		return x.WrongLeader
	}
	return false
}

var File_raftdb_grpc_proto protoreflect.FileDescriptor

var file_raftdb_grpc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62, 0x22, 0xad, 0x01, 0x0a, 0x02,
	0x4f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a,
	0x03, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0x2d, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x43, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0x55, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x72, 0x6f, 0x6e,
	0x67, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x77, 0x72, 0x6f, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x32, 0x96, 0x01, 0x0a, 0x0d,
	0x52, 0x61, 0x66, 0x74, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x10, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x0f,
	0x2e, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x10, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x31, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x72, 0x61,
	0x66, 0x74, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x13, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x72, 0x61, 0x66, 0x74, 0x64, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_raftdb_grpc_proto_rawDescOnce sync.Once
	file_raftdb_grpc_proto_rawDescData = file_raftdb_grpc_proto_rawDesc
)

func file_raftdb_grpc_proto_rawDescGZIP() []byte {
	file_raftdb_grpc_proto_rawDescOnce.Do(func() {
		file_raftdb_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_raftdb_grpc_proto_rawDescData)
	})
	return file_raftdb_grpc_proto_rawDescData
}

var file_raftdb_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_raftdb_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_raftdb_grpc_proto_goTypes = []interface{}{
	(Op_Type)(0),        // 0: raftdb.Op.Type
	(*Op)(nil),          // 1: raftdb.Op
	(*GetArgs)(nil),     // 2: raftdb.GetArgs
	(*GetReply)(nil),    // 3: raftdb.GetReply
	(*PutArgs)(nil),     // 4: raftdb.PutArgs
	(*PutReply)(nil),    // 5: raftdb.PutReply
	(*DeleteArgs)(nil),  // 6: raftdb.DeleteArgs
	(*DeleteReply)(nil), // 7: raftdb.DeleteReply
}
var file_raftdb_grpc_proto_depIdxs = []int32{
	0, // 0: raftdb.Op.type:type_name -> raftdb.Op.Type
	2, // 1: raftdb.RaftDBService.Get:input_type -> raftdb.GetArgs
	4, // 2: raftdb.RaftDBService.Put:input_type -> raftdb.PutArgs
	6, // 3: raftdb.RaftDBService.Delete:input_type -> raftdb.DeleteArgs
	3, // 4: raftdb.RaftDBService.Get:output_type -> raftdb.GetReply
	5, // 5: raftdb.RaftDBService.Put:output_type -> raftdb.PutReply
	7, // 6: raftdb.RaftDBService.Delete:output_type -> raftdb.DeleteReply
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_raftdb_grpc_proto_init() }
func file_raftdb_grpc_proto_init() {
	if File_raftdb_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_raftdb_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Op); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftdb_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftdb_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftdb_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftdb_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftdb_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raftdb_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_raftdb_grpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_raftdb_grpc_proto_goTypes,
		DependencyIndexes: file_raftdb_grpc_proto_depIdxs,
		EnumInfos:         file_raftdb_grpc_proto_enumTypes,
		MessageInfos:      file_raftdb_grpc_proto_msgTypes,
	}.Build()
	File_raftdb_grpc_proto = out.File
	file_raftdb_grpc_proto_rawDesc = nil
	file_raftdb_grpc_proto_goTypes = nil
	file_raftdb_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RaftDBServiceClient is the client API for RaftDBService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftDBServiceClient interface {
	Get(ctx context.Context, in *GetArgs, opts ...grpc.CallOption) (*GetReply, error)
	Put(ctx context.Context, in *PutArgs, opts ...grpc.CallOption) (*PutReply, error)
	Delete(ctx context.Context, in *DeleteArgs, opts ...grpc.CallOption) (*DeleteReply, error)
}

type raftDBServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRaftDBServiceClient(cc grpc.ClientConnInterface) RaftDBServiceClient {
	return &raftDBServiceClient{cc}
}

func (c *raftDBServiceClient) Get(ctx context.Context, in *GetArgs, opts ...grpc.CallOption) (*GetReply, error) {
	out := new(GetReply)
	err := c.cc.Invoke(ctx, "/raftdb.RaftDBService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftDBServiceClient) Put(ctx context.Context, in *PutArgs, opts ...grpc.CallOption) (*PutReply, error) {
	out := new(PutReply)
	err := c.cc.Invoke(ctx, "/raftdb.RaftDBService/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftDBServiceClient) Delete(ctx context.Context, in *DeleteArgs, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := c.cc.Invoke(ctx, "/raftdb.RaftDBService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftDBServiceServer is the server API for RaftDBService service.
type RaftDBServiceServer interface {
	Get(context.Context, *GetArgs) (*GetReply, error)
	Put(context.Context, *PutArgs) (*PutReply, error)
	Delete(context.Context, *DeleteArgs) (*DeleteReply, error)
}

// UnimplementedRaftDBServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRaftDBServiceServer struct {
}

func (*UnimplementedRaftDBServiceServer) Get(context.Context, *GetArgs) (*GetReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRaftDBServiceServer) Put(context.Context, *PutArgs) (*PutReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedRaftDBServiceServer) Delete(context.Context, *DeleteArgs) (*DeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterRaftDBServiceServer(s *grpc.Server, srv RaftDBServiceServer) {
	s.RegisterService(&_RaftDBService_serviceDesc, srv)
}

func _RaftDBService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftDBServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raftdb.RaftDBService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftDBServiceServer).Get(ctx, req.(*GetArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftDBService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftDBServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raftdb.RaftDBService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftDBServiceServer).Put(ctx, req.(*PutArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftDBService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftDBServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raftdb.RaftDBService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftDBServiceServer).Delete(ctx, req.(*DeleteArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftDBService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "raftdb.RaftDBService",
	HandlerType: (*RaftDBServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _RaftDBService_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _RaftDBService_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RaftDBService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raftdb-grpc.proto",
}
